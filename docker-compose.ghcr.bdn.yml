volumes:
  ckan_storage:
  ckan_logs:
  pg_data:
  solr_data:
  pip_cache:
  site_packages:
  bdn_data:


services:
   
  apache:
    build:
      context: apache/
      dockerfile: Dockerfile
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
          max-size: "100m"
          max-file: "10"
    networks:
      - webnet
      - ckannet
    depends_on:
      - ckan
    ports:
      - "0.0.0.0:${APACHE_PORT_HOST}:${APACHE_PORT}"
    restart: on-failure:3

  ckan:
    build:
      context: ckan/
      dockerfile: Dockerfile.ghcr
      args:
        - TZ=${TZ}
    networks:
      - ckannet
      - dbnet
      - solrnet
      - redisnet
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
          max-size: "100m"
          max-file: "10"
    depends_on:
      - db
      - solr
      - redis
    volumes:
      - ckan_storage:/var/lib/ckan
      - ckan_logs:/var/log
      - pip_cache:/root/.cache/pip
      - site_packages:/usr/lib/python3.9/site-packages
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:${CKAN_PORT}"]

  pycsw:
    build:
      context: ckan-pycsw/
      dockerfile: Dockerfile
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
          max-size: "100m"
          max-file: "10"
    networks:
      - webnet
      - ckannet
    depends_on:
      - ckan
    volumes:
        - ./log:${APP_DIR}/log
        - ./metadata:${APP_DIR}/metadata
    restart: on-failure:3
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:${PYCSW_PORT}"]

  db:
    build:
      context: postgresql/
      args:
       - DATASTORE_READONLY_PASSWORD=${DATASTORE_READONLY_PASSWORD}
       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DATASTORE_READONLY_PASSWORD=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/db
    networks:
       - dbnet
    volumes:
      - pg_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
          max-size: "100m"
          max-file: "10"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
     
  bdndb:
    build:
      context: postgresql/
      args:
       - DATASTORE_READONLY_PASSWORD=${DATASTORE_READONLY_PASSWORD}
       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DATASTORE_READONLY_PASSWORD=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/db
    logging:
      driver: "json-file"
      options:
          max-size: "100m"
          max-file: "10"
    volumes:
      - bdn_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ckan"]

  solr:
    build:
      context: solr/
      dockerfile: Dockerfile.iepnb
    networks:
      - solrnet
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
          max-size: "100m"
          max-file: "10"
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:${SOLR_PORT}/solr/"]

  redis:
    image: redis:${REDIS_VERSION}
    logging:
      driver: "json-file"
      options:
          max-size: "100m"
          max-file: "10"
    networks:
      - redisnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]

  bdn:
    build:
      context: ckan/
      dockerfile: Dockerfile.bdn
      args:
        - TZ=${TZ}
    env_file:
      - .env.bdn
    logging:
      driver: "json-file"
      options:
          max-file: "10"
    depends_on:
      - bdndb
      - solr
      - redis
      - ckan
    ports:
      - "0.0.0.0:${BDN_PORT_HOST}:${CKAN_PORT}" 
    volumes:
      - ckan_storage:/var/lib/ckan
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:${CKAN_PORT}"]

networks:
  webnet:
  ckannet:
  solrnet:
    internal: true
  dbnet:
    internal: true
  redisnet:
    internal: true
