FROM ghcr.io/mjanez/ckan-base-spatial:ckan-2.9.9

# Set up environment variables
ENV APP_DIR=/srv/app \
    TZ=UTC

# requirements.txt files fixed until next releases
COPY req_fixes ${APP_DIR}/req_fixes

# Extensions
### DCAT - v1.5.1 ###
### Scheming - release-3.0.0 ###
### Pages - v0.5.2 ###
### SPARQL Interface - 2.0.1 ###
### IEPNB Theme - 2.0.2 ###
### bdncatalog - main ###
RUN echo ${TZ} > /etc/timezone && \
    if ! [ /usr/share/zoneinfo/${TZ} -ef /etc/localtime ]; then cp /usr/share/zoneinfo/${TZ} /etc/localtime ; fi && \
    # Install CKAN extensions
    echo "ckan/ckanext-dcat" && \
    pip3 install -e git+https://github.com/ckan/ckanext-dcat.git@v1.5.1#egg=ckanext-dcat && \
    pip3 install -r ${APP_DIR}/src/ckanext-dcat/requirements.txt && \
    echo "ckan/ckanext-scheming" && \
    pip3 install -e git+https://github.com/ckan/ckanext-scheming.git@release-3.0.0#egg=ckanext-scheming && \
    echo "ckan/ckanext-pages" && \
    pip3 install -e git+https://github.com/ckan/ckanext-pages.git@v0.5.2#egg=ckanext-pages && \
    echo "OpenDataGIS/ckanext-iepnb" && \
    pip3 install -e git+https://github.com/OpenDataGIS/ckanext-iepnb.git@2.0.2#egg=ckanext-iepnb && \
    pip3 install -r https://raw.githubusercontent.com/OpenDataGIS/ckanext-iepnb/2.0.2/requirements.txt && \
    echo "OpenDataGIS/ckanext-sparql_interface" && \
    pip3 install -e git+https://github.com/OpenDataGIS/ckanext-sparql_interface.git@2.0.2-iepnb#egg=ckanext-sparql_interface && \
    pip3 install -r https://raw.githubusercontent.com/OpenDataGIS/ckanext-sparql_interface/2.0.2-iepnb/requirements.txt && \
    echo "mjanez/ckanext-bdncatalog" && \
    pip3 install -e git+https://github.com/mjanez/ckanext-bdncatalog.git#egg=ckanext-bdncatalog

# Used to configure the container environment by setting environment variables, creating users, running initialization scripts, .etc
COPY docker-entrypoint.bdn.d/* /docker-entrypoint.d/

# Update who.ini with PROXY_CKAN_LOCATION
COPY setup/who.ini ${APP_DIR}/

# Apply any patches needed to CKAN core
COPY patches ${APP_DIR}/patches

RUN for d in $APP_DIR/patches/*; do \
    if [ -d $d ]; then \
    for f in `ls $d/*.patch | sort -g`; do \
    cd $SRC_DIR/`basename "$d"` && echo "$0: Applying patch $f to $SRC_DIR/`basename $d`"; patch -p1 < "$f" ; \
    done ; \
    fi ; \
    done

CMD $APP_DIR/start_ckan.sh
